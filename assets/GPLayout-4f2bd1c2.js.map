{"version":3,"file":"GPLayout-4f2bd1c2.js","sources":["../../node_modules/@fluentui/utilities/lib/getNativeElementProps.js","../../node_modules/@fluentui/react/lib/components/Link/useLink.js","../../node_modules/@fluentui/react/lib/components/Link/Link.base.js","../../node_modules/@fluentui/react/lib/components/Link/Link.styles.js","../../node_modules/@fluentui/react/lib/components/Link/Link.js","../../node_modules/@fluentui/react/lib/utilities/ThemeProvider/styleRenderers/mergeStylesRenderer.js","../../node_modules/@fluentui/react/lib/utilities/ThemeProvider/makeStyles.js","../../node_modules/@fluentui/react/lib/utilities/ThemeProvider/useThemeProviderClasses.js","../../node_modules/@fluentui/react/lib/utilities/ThemeProvider/renderThemeProvider.js","../../node_modules/@fluentui/react/lib/utilities/ThemeProvider/useThemeProviderState.js","../../node_modules/@fluentui/react/lib/utilities/ThemeProvider/useThemeProvider.js","../../node_modules/@fluentui/react/lib/utilities/ThemeProvider/ThemeProvider.js","../../src/common/IUserInformations.tsx","../../src/components/navigation/HeaderLinks.tsx","../../src/components/navigation/UserInformationHeaderBlock.tsx","../../src/components/navigation/HeaderLine.tsx","../../src/components/navigation/MainBlock.tsx","../../src/components/navigation/FooterLine.tsx","../../src/components/navigation/GPLayout.tsx"],"sourcesContent":["import { labelProperties, audioProperties, videoProperties, olProperties, liProperties, anchorProperties, buttonProperties, inputProperties, textAreaProperties, selectProperties, optionProperties, tableProperties, trProperties, thProperties, tdProperties, colGroupProperties, colProperties, formProperties, iframeProperties, imgProperties, htmlElementProperties, getNativeProps, } from './properties';\nvar nativeElementMap = {\n    label: labelProperties,\n    audio: audioProperties,\n    video: videoProperties,\n    ol: olProperties,\n    li: liProperties,\n    a: anchorProperties,\n    button: buttonProperties,\n    input: inputProperties,\n    textarea: textAreaProperties,\n    select: selectProperties,\n    option: optionProperties,\n    table: tableProperties,\n    tr: trProperties,\n    th: thProperties,\n    td: tdProperties,\n    colGroup: colGroupProperties,\n    col: colProperties,\n    form: formProperties,\n    iframe: iframeProperties,\n    img: imgProperties,\n};\n/**\n * Given an element tagname and user props, filters the props to only allowed props for the given\n * element type.\n * @param tagName - Tag name (e.g. \"div\")\n * @param props - Props object\n * @param excludedPropNames - List of props to disallow\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getNativeElementProps(tagName, props, excludedPropNames) {\n    var allowedPropNames = (tagName && nativeElementMap[tagName]) || htmlElementProperties;\n    return getNativeProps(props, allowedPropNames, excludedPropNames);\n}\n//# sourceMappingURL=getNativeElementProps.js.map","import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport { classNamesFunction, useFocusRects } from '@fluentui/utilities';\nvar getClassNames = classNamesFunction();\n/**\n * The useLink hook processes the Link component props and returns\n * state, slots and slotProps for consumption by the component.\n */\nexport var useLink = function (props, forwardedRef) {\n    var as = props.as, className = props.className, disabled = props.disabled, href = props.href, onClick = props.onClick, styles = props.styles, theme = props.theme, underline = props.underline;\n    var rootRef = React.useRef(null);\n    var mergedRootRefs = useMergedRefs(rootRef, forwardedRef);\n    useComponentRef(props, rootRef);\n    useFocusRects(rootRef);\n    var classNames = getClassNames(styles, {\n        className: className,\n        isButton: !href,\n        isDisabled: disabled,\n        isUnderlined: underline,\n        theme: theme,\n    });\n    var _onClick = function (ev) {\n        if (disabled) {\n            ev.preventDefault();\n        }\n        else if (onClick) {\n            onClick(ev);\n        }\n    };\n    var rootType = as ? as : href ? 'a' : 'button';\n    var state = {};\n    var slots = { root: rootType };\n    var slotProps = {\n        root: __assign(__assign({}, adjustPropsForRootType(rootType, props)), { 'aria-disabled': disabled, className: classNames.root, onClick: _onClick, ref: mergedRootRefs }),\n    };\n    return { state: state, slots: slots, slotProps: slotProps };\n};\nvar useComponentRef = function (props, link) {\n    React.useImperativeHandle(props.componentRef, function () { return ({\n        focus: function () {\n            if (link.current) {\n                link.current.focus();\n            }\n        },\n    }); }, [link]);\n};\nvar adjustPropsForRootType = function (RootType, props) {\n    // Deconstruct the props so we remove props like `as`, `theme` and `styles`\n    // as those will always be removed. We also take some props that are optional\n    // based on the RootType.\n    var as = props.as, disabled = props.disabled, target = props.target, href = props.href, theme = props.theme, getStyles = props.getStyles, styles = props.styles, componentRef = props.componentRef, underline = props.underline, restProps = __rest(props, [\"as\", \"disabled\", \"target\", \"href\", \"theme\", \"getStyles\", \"styles\", \"componentRef\", \"underline\"]);\n    // RootType will be a string if we're dealing with an html component\n    if (typeof RootType === 'string') {\n        // Remove the disabled prop for anchor elements\n        if (RootType === 'a') {\n            return __assign({ target: target, href: disabled ? undefined : href }, restProps);\n        }\n        // Add the type='button' prop for button elements\n        if (RootType === 'button') {\n            return __assign({ type: 'button', disabled: disabled }, restProps);\n        }\n        // Remove the target and href props for all other non anchor elements\n        return __assign(__assign({}, restProps), { disabled: disabled });\n    }\n    // Retain all props except 'as' for ReactComponents\n    return __assign({ target: target, href: href, disabled: disabled }, restProps);\n};\n//# sourceMappingURL=useLink.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useLink } from './useLink';\nexport var LinkBase = React.forwardRef(function (props, ref) {\n    var _a = useLink(props, ref), slots = _a.slots, slotProps = _a.slotProps;\n    return React.createElement(slots.root, __assign({}, slotProps.root));\n});\nLinkBase.displayName = 'LinkBase';\n//# sourceMappingURL=Link.base.js.map","import { getGlobalClassNames, HighContrastSelector } from '@fluentui/style-utilities';\nexport var GlobalClassNames = {\n    root: 'ms-Link',\n};\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    var className = props.className, isButton = props.isButton, isDisabled = props.isDisabled, isUnderlined = props.isUnderlined, theme = props.theme;\n    var semanticColors = theme.semanticColors;\n    // Tokens\n    var linkColor = semanticColors.link;\n    var linkInteractedColor = semanticColors.linkHovered;\n    var linkDisabledColor = semanticColors.disabledText;\n    var focusBorderColor = semanticColors.focusBorder;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            {\n                color: linkColor,\n                outline: 'none',\n                fontSize: 'inherit',\n                fontWeight: 'inherit',\n                textDecoration: isUnderlined ? 'underline' : 'none',\n                selectors: (_a = {\n                        '.ms-Fabric--isFocusVisible &:focus': {\n                            // Can't use getFocusStyle because it doesn't support wrapping links\n                            // https://github.com/microsoft/fluentui/issues/4883#issuecomment-406743543\n                            // Using box-shadow and outline allows the focus rect to wrap links that span multiple lines\n                            // and helps the focus rect avoid getting clipped.\n                            boxShadow: \"0 0 0 1px \".concat(focusBorderColor, \" inset\"),\n                            outline: \"1px auto \".concat(focusBorderColor),\n                            selectors: (_b = {},\n                                _b[HighContrastSelector] = {\n                                    outline: '1px solid WindowText',\n                                },\n                                _b),\n                        }\n                    },\n                    _a[HighContrastSelector] = {\n                        // For IE high contrast mode\n                        borderBottom: 'none',\n                    },\n                    _a),\n            },\n            isButton && {\n                background: 'none',\n                backgroundColor: 'transparent',\n                border: 'none',\n                cursor: 'pointer',\n                display: 'inline',\n                margin: 0,\n                overflow: 'inherit',\n                padding: 0,\n                textAlign: 'left',\n                textOverflow: 'inherit',\n                userSelect: 'text',\n                borderBottom: '1px solid transparent',\n                selectors: (_c = {},\n                    _c[HighContrastSelector] = {\n                        color: 'LinkText',\n                        forcedColorAdjust: 'none',\n                    },\n                    _c),\n            },\n            !isButton && {\n                selectors: (_d = {},\n                    _d[HighContrastSelector] = {\n                        // This is mainly for MessageBar, which sets MsHighContrastAdjust: none by default\n                        MsHighContrastAdjust: 'auto',\n                        forcedColorAdjust: 'auto',\n                    },\n                    _d),\n            },\n            isDisabled && [\n                'is-disabled',\n                {\n                    color: linkDisabledColor,\n                    cursor: 'default',\n                },\n                {\n                    selectors: (_e = {\n                            '&:link, &:visited': {\n                                pointerEvents: 'none',\n                            }\n                        },\n                        _e[HighContrastSelector] = {\n                            // We need to specify the color in High Contrast because of the case of Links rendering as buttons.\n                            color: 'GrayText',\n                        },\n                        _e),\n                },\n            ],\n            !isDisabled && {\n                selectors: {\n                    '&:active, &:hover, &:active:hover': {\n                        color: linkInteractedColor,\n                        textDecoration: 'underline',\n                        selectors: (_f = {},\n                            _f[HighContrastSelector] = {\n                                color: 'LinkText',\n                            },\n                            _f),\n                    },\n                    '&:focus': {\n                        color: linkColor,\n                        selectors: (_g = {},\n                            _g[HighContrastSelector] = {\n                                color: 'LinkText',\n                            },\n                            _g),\n                    },\n                },\n            },\n            classNames.root,\n            className,\n        ],\n    };\n};\n//# sourceMappingURL=Link.styles.js.map","import { styled } from '@fluentui/utilities';\nimport { LinkBase } from './Link.base';\nimport { getStyles } from './Link.styles';\nexport var Link = styled(LinkBase, getStyles, undefined, {\n    scope: 'Link',\n});\n//# sourceMappingURL=Link.js.map","import { Stylesheet, mergeCssSets, fontFace as mergeFontFace, keyframes as mergeKeyframes, } from '@fluentui/merge-styles';\nvar _seed = 0;\nexport var mergeStylesRenderer = {\n    reset: function () {\n        // If the stylesheet reset call is made, invalidate the cache keys.\n        Stylesheet.getInstance().onReset(function () { return _seed++; });\n    },\n    getId: function () { return _seed; },\n    renderStyles: function (styleSet, options) {\n        return mergeCssSets((Array.isArray(styleSet) ? styleSet : [styleSet]), options);\n    },\n    renderFontFace: function (fontFace, options) {\n        return mergeFontFace(fontFace);\n    },\n    renderKeyframes: function (keyframes) {\n        return mergeKeyframes(keyframes);\n    },\n};\n//# sourceMappingURL=mergeStylesRenderer.js.map","import { useTheme } from './useTheme';\nimport { getId } from '@fluentui/utilities';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport { mergeStylesRenderer } from './styleRenderers/mergeStylesRenderer';\nimport { useEffect } from 'react';\nvar graphGet = function (graphNode, _a) {\n    var _b, _c, _d;\n    var windowId = _a[0], id = _a[1], theme = _a[2];\n    return (_d = (_c = (_b = graphNode.get(windowId)) === null || _b === void 0 ? void 0 : _b.get(id)) === null || _c === void 0 ? void 0 : _c.get(theme)) === null || _d === void 0 ? void 0 : _d.classMap;\n};\nvar graphSet = function (graphNode, _a, classMap) {\n    var _b, _c;\n    var windowId = _a[0], id = _a[1], theme = _a[2];\n    var windowNode = (_b = graphNode.get(windowId)) !== null && _b !== void 0 ? _b : new Map();\n    graphNode.set(windowId, windowNode);\n    var idNode = (_c = windowNode.get(id)) !== null && _c !== void 0 ? _c : new Map();\n    windowNode.set(id, idNode);\n    idNode.set(theme, { classMap: classMap, refCount: 0 });\n};\nfunction graphRef(graphNode, _a) {\n    var _b, _c;\n    var windowId = _a[0], id = _a[1], theme = _a[2];\n    var node = (_c = (_b = graphNode.get(windowId)) === null || _b === void 0 ? void 0 : _b.get(id)) === null || _c === void 0 ? void 0 : _c.get(theme);\n    if (node) {\n        node.refCount++;\n    }\n}\nfunction graphDeref(graphNode, _a) {\n    var _b, _c, _d, _e, _f, _g, _h, _j;\n    var windowId = _a[0], id = _a[1], theme = _a[2];\n    var node = (_c = (_b = graphNode.get(windowId)) === null || _b === void 0 ? void 0 : _b.get(id)) === null || _c === void 0 ? void 0 : _c.get(theme);\n    if (node) {\n        node.refCount--;\n        if (node.refCount === 0) {\n            (_e = (_d = graphNode.get(windowId)) === null || _d === void 0 ? void 0 : _d.get(id)) === null || _e === void 0 ? void 0 : _e.delete(theme);\n            if (((_g = (_f = graphNode.get(windowId)) === null || _f === void 0 ? void 0 : _f.get(id)) === null || _g === void 0 ? void 0 : _g.size) === 0) {\n                (_h = graphNode.get(windowId)) === null || _h === void 0 ? void 0 : _h.delete(id);\n                if (((_j = graphNode.get(windowId)) === null || _j === void 0 ? void 0 : _j.size) === 0) {\n                    graphNode.delete(windowId);\n                }\n            }\n        }\n    }\n}\n/**\n * Registers a css object, optionally as a function of the theme.\n *\n * @param styleOrFunction - Either a css javascript object, or a function which takes in `ITheme`\n * and returns a css javascript object.\n *\n * @deprecated Use `mergeStyles` instead for v8 related code. We will be using a new implementation of `makeStyles` in\n * future versions of the library.\n */\nexport function makeStyles(styleOrFunction) {\n    // Create graph of inputs to map to output.\n    var graph = new Map();\n    // Retain a dictionary of window ids we're tracking\n    var allWindows = new Set();\n    // cleanupMapEntries will\n    // 1. remove all the graph branches for the window,\n    // 2. remove the event listener,\n    // 3. delete the allWindows entry.\n    var cleanupMapEntries = function (ev) {\n        var win = ev.currentTarget;\n        var winId = win.__id__;\n        graph.delete(winId);\n        win.removeEventListener('unload', cleanupMapEntries);\n        allWindows.delete(winId);\n    };\n    // eslint-disable-next-line deprecation/deprecation\n    return function (options) {\n        if (options === void 0) { options = {}; }\n        var theme = options.theme;\n        var winId;\n        var win = useWindow();\n        if (win) {\n            win.__id__ = win.__id__ || getId();\n            winId = win.__id__;\n            if (!allWindows.has(winId)) {\n                allWindows.add(winId);\n                win.addEventListener('unload', cleanupMapEntries);\n            }\n        }\n        var contextualTheme = useTheme();\n        theme = theme || contextualTheme;\n        var renderer = mergeStylesRenderer;\n        var id = renderer.getId();\n        var path = [winId, id, theme];\n        var value = graphGet(graph, path);\n        // Don't keep around unused styles\n        useEffect(function () {\n            graphRef(graph, [winId, id, theme]);\n            return function () { return graphDeref(graph, [winId, id, theme]); };\n        }, [winId, id, theme]);\n        if (!value) {\n            var styles = isStyleFunction(styleOrFunction)\n                ? styleOrFunction(theme)\n                : styleOrFunction;\n            value = mergeStylesRenderer.renderStyles(styles, { targetWindow: win, rtl: !!theme.rtl });\n            graphSet(graph, path, value);\n        }\n        return value;\n    };\n}\nfunction isStyleFunction(styleOrFunction) {\n    return typeof styleOrFunction === 'function';\n}\n//# sourceMappingURL=makeStyles.js.map","import * as React from 'react';\nimport { css } from '@fluentui/utilities';\nimport { useDocument } from '@fluentui/react-window-provider';\nimport { makeStyles } from './makeStyles';\n// eslint-disable-next-line deprecation/deprecation\nvar useThemeProviderStyles = makeStyles(function (theme) {\n    var semanticColors = theme.semanticColors, fonts = theme.fonts;\n    return {\n        body: [\n            {\n                color: semanticColors.bodyText,\n                background: semanticColors.bodyBackground,\n                fontFamily: fonts.medium.fontFamily,\n                fontWeight: fonts.medium.fontWeight,\n                fontSize: fonts.medium.fontSize,\n                MozOsxFontSmoothing: fonts.medium.MozOsxFontSmoothing,\n                WebkitFontSmoothing: fonts.medium.WebkitFontSmoothing,\n            },\n        ],\n    };\n});\n/**\n * Hook to add class to body element.\n */\nfunction useApplyClassToBody(state, classesToApply) {\n    var _a;\n    var applyTo = state.applyTo;\n    var applyToBody = applyTo === 'body';\n    var body = (_a = useDocument()) === null || _a === void 0 ? void 0 : _a.body;\n    React.useEffect(function () {\n        if (!applyToBody || !body) {\n            return;\n        }\n        for (var _i = 0, classesToApply_1 = classesToApply; _i < classesToApply_1.length; _i++) {\n            var classToApply = classesToApply_1[_i];\n            if (classToApply) {\n                body.classList.add(classToApply);\n            }\n        }\n        return function () {\n            if (!applyToBody || !body) {\n                return;\n            }\n            for (var _i = 0, classesToApply_2 = classesToApply; _i < classesToApply_2.length; _i++) {\n                var classToApply = classesToApply_2[_i];\n                if (classToApply) {\n                    body.classList.remove(classToApply);\n                }\n            }\n        };\n    }, [applyToBody, body, classesToApply]);\n}\nexport function useThemeProviderClasses(state) {\n    var classes = useThemeProviderStyles(state);\n    var className = state.className, applyTo = state.applyTo;\n    useApplyClassToBody(state, [classes.root, classes.body]);\n    state.className = css(className, classes.root, applyTo === 'element' && classes.body);\n}\n//# sourceMappingURL=useThemeProviderClasses.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { CustomizerContext, FocusRectsProvider, getNativeElementProps, omit } from '@fluentui/utilities';\nimport { ThemeContext } from './ThemeContext';\nexport var renderThemeProvider = function (state) {\n    var customizerContext = state.customizerContext, ref = state.ref, theme = state.theme;\n    var Root = state.as || 'div';\n    var rootProps = typeof state.as === 'string'\n        ? getNativeElementProps(state.as, state)\n        : state.as === React.Fragment\n            ? { children: state.children }\n            : omit(state, ['as']);\n    return (React.createElement(ThemeContext.Provider, { value: theme },\n        React.createElement(CustomizerContext.Provider, { value: customizerContext },\n            React.createElement(FocusRectsProvider, { providerRef: ref },\n                React.createElement(Root, __assign({}, rootProps))))));\n};\n//# sourceMappingURL=renderThemeProvider.js.map","import { mergeThemes } from '@fluentui/theme';\nimport * as React from 'react';\nimport { useTheme } from './useTheme';\nimport { getId } from '@fluentui/utilities';\nvar themeToIdMap = new Map();\nvar getThemeId = function () {\n    var themes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        themes[_i] = arguments[_i];\n    }\n    var ids = [];\n    for (var _a = 0, themes_1 = themes; _a < themes_1.length; _a++) {\n        var theme = themes_1[_a];\n        if (theme) {\n            var id = theme.id || themeToIdMap.get(theme);\n            if (!id) {\n                id = getId('');\n                themeToIdMap.set(theme, id);\n            }\n            ids.push(id);\n        }\n    }\n    return ids.join('-');\n};\nexport var useThemeProviderState = function (draftState) {\n    var userTheme = draftState.theme;\n    // Pull contextual theme.\n    var parentTheme = useTheme();\n    // Update the incoming theme with a memoized version of the merged theme.\n    var theme = (draftState.theme = React.useMemo(function () {\n        var mergedTheme = mergeThemes(parentTheme, userTheme);\n        mergedTheme.id = getThemeId(parentTheme, userTheme);\n        return mergedTheme;\n    }, [parentTheme, userTheme]));\n    draftState.customizerContext = React.useMemo(function () { return ({\n        customizations: {\n            inCustomizerContext: true,\n            settings: { theme: theme },\n            scopedSettings: theme.components || {},\n        },\n    }); }, [theme]);\n    if (draftState.theme.rtl !== parentTheme.rtl) {\n        draftState.dir = draftState.theme.rtl ? 'rtl' : 'ltr';\n    }\n};\n//# sourceMappingURL=useThemeProviderState.js.map","import { renderThemeProvider as render } from './renderThemeProvider';\nimport { useThemeProviderState } from './useThemeProviderState';\nimport { getPropsWithDefaults } from '@fluentui/utilities';\n/**\n * Returns the ThemeProvider render function and calculated state, given user input, ref, and\n * a set of default prop values.\n */\nexport var useThemeProvider = function (props, defaultProps) {\n    var state = getPropsWithDefaults(defaultProps, props);\n    // Apply changes to state.\n    useThemeProviderState(state);\n    return {\n        state: state,\n        render: render,\n    };\n};\n//# sourceMappingURL=useThemeProvider.js.map","import * as React from 'react';\nimport { useThemeProviderClasses } from './useThemeProviderClasses';\nimport { useThemeProvider } from './useThemeProvider';\nimport { useMergedRefs } from '@fluentui/react-hooks';\n/**\n * ThemeProvider, used for providing css variables and registering stylesheets.\n */\nexport var ThemeProvider = React.forwardRef(function (props, ref) {\n    var rootRef = useMergedRefs(ref, React.useRef(null));\n    var _a = useThemeProvider(props, {\n        ref: rootRef,\n        as: 'div',\n        applyTo: 'element',\n    }), render = _a.render, state = _a.state;\n    // Render styles.\n    useThemeProviderClasses(state);\n    // Return the rendered content.\n    return render(state);\n});\nThemeProvider.displayName = 'ThemeProvider';\n//# sourceMappingURL=ThemeProvider.js.map","export interface IUserInformation {\n    commonName:string;\n    eMail:string;\n    oganisationName:string;\n}\n\nexport enum UserInformationEventType {\n    LOGOUT = \"logout\",\n    LOGIN = \"login\",\n    PROFILE = \"profile\",\n    SETTINGS = \"settings\"\n}","import { ActionButton, Link, Stack, getTheme, useTheme } from \"@fluentui/react\";\nimport React from \"react\";\nimport { IActionableLinkProp } from \"../../common\";\n\nexport interface IHeaderLinksProps {\n    linkItems?: IActionableLinkProp[];\n}\n\nexport const HeaderLinks: React.FunctionComponent<IHeaderLinksProps> = (props: IHeaderLinksProps) => {\n    const theme = useTheme();\n    return props.linkItems ? <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: \"10px\" }}>{props.linkItems.map(item => <Link style={{ color: theme.semanticColors.primaryButtonText }} key={item.id} onClick={() => item.onClick(item.id)}>{item.title}</Link>)}</Stack> : null;\n}","import React from \"react\";\nimport { IUserInformation } from \"../../common\";\nimport { ContextualMenu, DefaultButton, DirectionalHint, IContextualMenuProps, IconButton, PrimaryButton, Stack, StackItem, Text, useTheme } from \"@fluentui/react\";\nimport { useConst, useBoolean } from '@fluentui/react-hooks';\n\n\nexport interface IUserInformationHeaderBlockProps {\n    userInformation?: IUserInformation;\n    onLogin: () => void;\n    onLogout: () => void;\n    onSettings: () => void;\n    onProfiles: () => void;\n}\n\nexport const UserInformationHeaderBlock: React.FunctionComponent<IUserInformationHeaderBlockProps> = (props: IUserInformationHeaderBlockProps) => {\n    const theme = useTheme();\n    const menuProps = useConst(()=>({\n        shouldFocusOnMount: true,\n        directionalHint: DirectionalHint.bottomRightEdge,\n        directionalHintFixed: true,\n        items: [\n            { key: 'myPofile', text: 'Profile', iconProps: { iconName: \"UserOptional\"}, onClick:()=>props.onProfiles() },\n            { key: 'settings', text: 'Settings', iconProps: { iconName: \"Settings\"}, onClick:()=>props.onSettings() },\n            { key: 'logoff', text: 'Logout', iconProps: { iconName: \"Leave\"}, onClick:()=>props.onLogout() },\n        ],\n        calloutProps: {\n            calloutMaxHeight: 300,\n        },\n    }));\n    return props.userInformation ?\n        <Stack horizontal>\n            <Stack verticalAlign=\"end\" horizontalAlign=\"end\" grow>\n                <StackItem align=\"end\"><Text style={{ color: theme.semanticColors.primaryButtonText }} variant=\"small\" nowrap block>{props.userInformation.commonName} ({props.userInformation.eMail})</Text></StackItem>\n                <StackItem align=\"start\"><Text style={{ color: theme.semanticColors.primaryButtonText }} variant=\"tiny\" nowrap block>Org: {props.userInformation.oganisationName}</Text></StackItem>\n            </Stack>\n            <StackItem align=\"end\">\n                <IconButton style={{ color: theme.semanticColors.primaryButtonText }} menuProps={menuProps}></IconButton>\n            </StackItem>\n        </Stack> :\n        <PrimaryButton onClick={props.onLogin}>Login</PrimaryButton>\n}\n","import { ActionButton, Link, Stack, StackItem, Text, getTheme, useTheme } from \"@fluentui/react\";\nimport React from \"react\";\nimport { IActionableLinkProp, IUserInformation, UserInformationEventType } from \"../../common\";\nimport { HeaderLinks } from \"./HeaderLinks\";\nimport { UserInformationHeaderBlock } from \"./UserInformationHeaderBlock\";\n\nexport interface IHeaderLineProps {\n    title: string;\n    backgroundColor?: string;\n    lineColor?: string;\n    titleColor?: string;\n    linkItems?: IActionableLinkProp[];\n    applicationItems?: IActionableLinkProp[];\n    userInformation?:IUserInformation;\n    onUserInformationEvent: (userInformationEventType:UserInformationEventType) => void;\n\n}\n\n\nexport const HeaderLine: React.FunctionComponent<IHeaderLineProps> = (props: IHeaderLineProps) => {\n    const theme = useTheme();\n    const bgColor = React.useMemo(() => props.backgroundColor ? props.backgroundColor : theme.palette.themeDark, [props.backgroundColor]);\n    const lineColor = React.useMemo(() => props.lineColor ? props.lineColor : theme.palette.themeDarker, [props.lineColor]);\n    const titleColor = React.useMemo(() => props.titleColor ? props.titleColor : theme.palette.white, [props.titleColor]);\n    return <Stack horizontal\n        verticalAlign=\"center\"\n        style={{ gap: \"20px\", width:\"100%\"}}\n        styles={{\n            root: {\n                backgroundColor: bgColor,\n                borderBottomColor: lineColor,\n                borderBottomWidth: \"1px\",\n                borderBottomStyle: \"solid\",\n                boxShadow: \"0px 2px 0px grey;\",\n                height: \"38px\",\n                paddingLeft: \"5px\",\n                paddingBottom:\"2px\"\n            }\n        }}>\n        <StackItem align=\"end\"><Text variant=\"xLarge\" style={{color:titleColor}}>{props.title}</Text></StackItem>\n        <StackItem align=\"end\"><HeaderLinks linkItems={props.linkItems}></HeaderLinks></StackItem>\n        <StackItem grow={10}>&nbsp;</StackItem>\n        <StackItem align=\"end\"><UserInformationHeaderBlock \n            onLogin={()=>props.onUserInformationEvent(UserInformationEventType.LOGIN)} \n            onLogout={()=>props.onUserInformationEvent(UserInformationEventType.LOGOUT)}\n            onProfiles={()=>props.onUserInformationEvent(UserInformationEventType.PROFILE)}\n            onSettings={()=>props.onUserInformationEvent(UserInformationEventType.SETTINGS)}\n            userInformation={props.userInformation}\n            />\n        </StackItem>\n    </Stack>\n}","import React, { PropsWithChildren } from \"react\";\nimport { IApplicationLinkProp } from \"../../common\";\nimport { IconButton, Stack, StackItem, mergeStyles, useTheme } from \"@fluentui/react\";\n\nexport interface IMainBlockProps {\n    applicationLinks?: IApplicationLinkProp[];\n    selectedApplicationId?: string;\n}\nconst iconClass = mergeStyles({\n    height: 50,\n    width: 50,\n});\nexport const MainBlock: React.FunctionComponent<PropsWithChildren<IMainBlockProps>> = (props: PropsWithChildren<IMainBlockProps>) => {\n    const theme = useTheme();\n    return <Stack horizontal verticalFill>\n        <StackItem>\n            <Stack verticalFill style={{ backgroundColor: theme.palette.themeLighter, width: \"50px\", marginTop: \"2px\" }}>\n                {props.applicationLinks ? props.applicationLinks.map(al =>\n                    <IconButton\n                        key={al.id}\n                        iconProps={{ iconName: al.iconName }}\n                        className={iconClass}\n                        styles={{ icon: { fontSize: 30 } }}\n                        onClick={() => al.onClick(al.id)}\n                        checked={al.id == props.selectedApplicationId}\n                    />) : null}\n            </Stack>\n        </StackItem>\n        <StackItem>{props.children}</StackItem>\n    </Stack>\n\n}","import React from \"react\";\nimport { IActionableLinkProp } from \"../../common\";\nimport { Stack, StackItem, useTheme, Text, Link } from \"@fluentui/react\";\n\nexport interface IFooterLineProps {\n    footerBackgroundColor?: string;\n    footerTextColor?: string;\n    version: string;\n    applicationInformations?: IActionableLinkProp[];\n}\n\nexport const FooterLine: React.FunctionComponent<IFooterLineProps> = (props: IFooterLineProps) => {\n    const theme = useTheme();\n    const bgColor = React.useMemo(() => props.footerBackgroundColor ? props.footerBackgroundColor : theme.palette.themeDarkAlt, [props.footerBackgroundColor]);\n    const footerTextColor = React.useMemo(() => props.footerTextColor ? props.footerTextColor : theme.semanticColors.primaryButtonText, [props.footerTextColor]);\n    return <Stack style={{ backgroundColor: bgColor, paddingLeft: \"5px\", paddingRight: \"5px\" }} horizontal>\n        <StackItem><Text variant=\"tiny\" style={{ color: footerTextColor }}>{props.version}</Text></StackItem>\n        <StackItem grow={10}>&nbsp;</StackItem>\n        <StackItem>{props.applicationInformations ?\n            <Stack horizontal>\n                {props.applicationInformations.map((ai, index) =>\n                    <StackItem key={ai.id}>\n                        {index > 0 ? <Text variant=\"tiny\" style={{ color: footerTextColor }}>&nbsp;|&nbsp;</Text> : null}\n                        <Link style={{ color: footerTextColor, fontSize: theme.fonts.tiny.fontSize }} onClick={() => ai.onClick(ai.id)}>{ai.title}</Link>\n                    </StackItem>)}\n            </Stack> : null}\n        </StackItem>\n    </Stack>\n}","import { Stack, StackItem, Theme, ThemeProvider, createTheme, initializeIcons } from \"@fluentui/react\";\nimport React, { PropsWithChildren } from \"react\";\nimport { HeaderLine } from \"./HeaderLine\";\nimport { IActionableLinkProp, IApplicationLinkProp, IUserInformation, UserInformationEventType } from \"../../common\";\nimport { MainBlock } from \"./MainBlock\";\nimport { FooterLine } from \"./FooterLine\";\n\nexport interface IGPLayoutProps {\n    title: string;\n    backgroundColor?: string;\n    lineColor?: string;\n    titleColor?: string;\n    linkItems?: IActionableLinkProp[];\n    applicationItems?: IApplicationLinkProp[];\n    userInformation?: IUserInformation;\n    theme?: Theme;\n    onUserInformationEvent: (userInformationEventType: UserInformationEventType) => void;\n    selectedApplicationId?: string;\n    version:string;\n    applicationInformations?:IActionableLinkProp[];\n\n}\ninitializeIcons();\nconst gpTheme = createTheme({\n    palette: {\n        themePrimary: '#0d8200',\n        themeLighterAlt: '#f1faf0',\n        themeLighter: '#c9ebc5',\n        themeLight: '#9fda98',\n        themeTertiary: '#53b448',\n        themeSecondary: '#1e9111',\n        themeDarkAlt: '#0c7500',\n        themeDark: '#0a6300',\n        themeDarker: '#074900',\n        neutralLighterAlt: '#faf9f8',\n        neutralLighter: '#f3f2f1',\n        neutralLight: '#edebe9',\n        neutralQuaternaryAlt: '#e1dfdd',\n        neutralQuaternary: '#d0d0d0',\n        neutralTertiaryAlt: '#c8c6c4',\n        neutralTertiary: '#a19f9d',\n        neutralSecondary: '#605e5c',\n        neutralSecondaryAlt: '#8a8886',\n        neutralPrimaryAlt: '#3b3a39',\n        neutralPrimary: '#323130',\n        neutralDark: '#201f1e',\n        black: '#000000',\n        white: '#ffffff',\n    }\n});\n\nexport const GPLayout: React.FunctionComponent<PropsWithChildren<IGPLayoutProps>> = (props: PropsWithChildren<IGPLayoutProps>) => {\n    return <ThemeProvider theme={props.theme ? props.theme : gpTheme}>\n        <Stack styles={{ root: { height: \"100%\", minHeight: \"100%\", position: \"fixed\", top: 0, left: 0, width: \"100%\" } }} verticalAlign=\"space-between\">\n            <StackItem>\n                <HeaderLine\n                    title={props.title}\n                    backgroundColor={props.backgroundColor}\n                    lineColor={props.lineColor}\n                    linkItems={props.linkItems}\n                    applicationItems={props.applicationItems}\n                    titleColor={props.titleColor}\n                    userInformation={props.userInformation}\n                    onUserInformationEvent={props.onUserInformationEvent}\n\n                />\n            </StackItem>\n            <StackItem grow={10}>\n                <MainBlock\n                    applicationLinks={props.applicationItems}\n                    selectedApplicationId={props.selectedApplicationId}>\n                        {props.children}\n                    </MainBlock>\n            </StackItem>\n            <StackItem>\n                <FooterLine \n                    version={props.version} \n                    applicationInformations={props.applicationInformations} />\n                </StackItem>\n        </Stack>\n    </ThemeProvider>;\n}"],"names":["nativeElementMap","labelProperties","audioProperties","videoProperties","olProperties","liProperties","anchorProperties","buttonProperties","inputProperties","textAreaProperties","selectProperties","optionProperties","tableProperties","trProperties","thProperties","tdProperties","colGroupProperties","colProperties","formProperties","iframeProperties","imgProperties","getNativeElementProps","tagName","props","excludedPropNames","allowedPropNames","htmlElementProperties","getNativeProps","getClassNames","classNamesFunction","useLink","forwardedRef","as","className","disabled","href","onClick","styles","theme","underline","rootRef","React.useRef","mergedRootRefs","useMergedRefs","useComponentRef","useFocusRects","classNames","_onClick","ev","rootType","state","slots","slotProps","__assign","adjustPropsForRootType","link","React.useImperativeHandle","RootType","target","restProps","__rest","LinkBase","React.forwardRef","ref","_a","React.createElement","GlobalClassNames","getStyles","_b","_c","_d","_e","_f","_g","isButton","isDisabled","isUnderlined","semanticColors","linkColor","linkInteractedColor","linkDisabledColor","focusBorderColor","getGlobalClassNames","HighContrastSelector","Link","styled","_seed","mergeStylesRenderer","Stylesheet","styleSet","options","mergeCssSets","fontFace","mergeFontFace","keyframes","mergeKeyframes","graphGet","graphNode","windowId","id","graphSet","classMap","windowNode","idNode","graphRef","node","graphDeref","_h","_j","makeStyles","styleOrFunction","graph","allWindows","cleanupMapEntries","win","winId","useWindow","getId","contextualTheme","useTheme","renderer","path","value","useEffect","isStyleFunction","useThemeProviderStyles","fonts","useApplyClassToBody","classesToApply","applyTo","applyToBody","body","useDocument","React.useEffect","_i","classesToApply_1","classToApply","classesToApply_2","useThemeProviderClasses","classes","css","renderThemeProvider","customizerContext","Root","rootProps","React.Fragment","omit","ThemeContext","CustomizerContext","FocusRectsProvider","themeToIdMap","getThemeId","themes","ids","themes_1","useThemeProviderState","draftState","userTheme","parentTheme","React.useMemo","mergedTheme","mergeThemes","useThemeProvider","defaultProps","getPropsWithDefaults","render","ThemeProvider","UserInformationEventType","HeaderLinks","jsx","Stack","item","UserInformationHeaderBlock","menuProps","useConst","DirectionalHint","jsxs","StackItem","Text","IconButton","PrimaryButton","HeaderLine","bgColor","React","lineColor","titleColor","iconClass","mergeStyles","MainBlock","al","FooterLine","footerTextColor","ai","index","initializeIcons","gpTheme","createTheme","GPLayout"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}